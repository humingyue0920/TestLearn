TestNG:
5-2 主要内容:idea中如何创建mudal(子模块)
5-3 主要内容:@Test注解,testng中最基本注解,用来把方法标记为测试的一部分
5-4  beforeMethod在测试方法之前运行, AfterMethod在测试方法之后运行
特点:在每个测试方法之前和之后都会运行一次
5-5 BeforeClass和AfterClass 在类之前运行和类之后运行
5-6 beforeSuite和AfterSuite
suite测试套件
@BeforeSuite：对于套件测试，在此套件中的所有测试执行之前运行，仅运行一次
@AfterSuite：对于套件测试，在此套件中的所有测试执行之后运行，仅运行一次
5-7 测试套件
1.新建package：suite
2.在suite下分别新建suiteconfig，login，pay类
3.在source下新建testng配置xml文件：test.xml
4.分别在文件中写入代码
5.其中xml文件中需要注意的是name标签一定要有，但名字可以自己随便定义
其中class的name规则一定是最上层的包名.类名
5-8 忽略测试
本次测试执行并不想要执行这个测试类
操作方法：在@Test注解后添加enable属性即可
@Test（enabal=false）   @Test（enabal=true）
5-9 TestNG组测试之方法分组
beforeGrounp和AfterGrounp
@test注解中一定要带有groups属性
@beforeGroups一定要带有组名称
注：在测试方法之前执行，且只执行一次
5-10 TestNG组测试之类分组
组测试如何在类上运行
本次运行只想运行一部分组
具体见代码grouponclass1,grouponclass2,grouponclass3和grouponclass.xml文件
注意grouponclass.xml文件中<group>标签写法
5-11 异常测试
主要知识点:@Test加入注解属性(expectedExceptions = RunTimeException.class)
且代码中还需加入throw new runtimeException
5-12 testng的依赖测试
依赖:test2依赖于test1,如果执行test2则test1也会被执行,如果test1失败了,则test2不执行
在@Test注解后添加Dependent属性即可, @Test(dependsOnMethods = {"test1"})
5-13 参数化测试-xml文件参数化
1.新建一个package,包名:parameter
2.新建一个类,ParameterTest
package course.testng.parameter;

import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

public class ParameterTest {
    @Test
    @Parameters({"name","age"})
    public void paramTest1(String name, int age){
        System.out.println("name = " + name +"; age = " +age);
    }

}
3.在resource下新建配置项,parameter.xml
<?xml version="1.0" encoding="UTF-8" ?>
<suite name = "parameter">
    <test name = "parameterTest">
        <classes>
            <parameter name ="name" value = "zhangsan"></parameter>
            <parameter name ="age" value = "10"></parameter>
            <class name = "course.testng.parameter.ParameterTest"></class>
        </classes>
    </test>
</suite>

5-14 参数化测试-DateProvide
1.新建DataProvideTest类
2.在test注解中加入属性dataProvide = ""
3.数据来源,定义对象数组
dataProvide 的数据来源就是对象里的方法,将provideData的数据传入到testDataProvider方法里
思考:为什么对象里的数据就能传入方法中
在对象方法上面增加了DataProvide注解,并定义了名称,而test里接收了这个名字
dataprovide支持根据方法进行参数传递
必须要写Method method的目的是什么呢:自动会将之前的方法名test1和test2给传递进来
第一种方式:怎样将参数直接传到方法里
第二种方式:怎么通过方法名传递参数

不同的方法传递不同的参数
编辑代码时所犯错误
1.@Test(dataProvider)属性名称拼写错误
2.未将Object[][]中的o大写
3.在对象中传值语法规则不会,导致整块写错
4.有些地方缺少分号,甚至将,写成了分号

5-15 多线程测试
1.新建package ,multiThread
2.新建类,MultiThreadOnAnnotion
innovationCount 线程数，表示执行的次数
当只有innovationCount属性时,并不是多线程运行,只有一个线程在运行,方法在这个线程上运行了10次,可通过Thread.currentThread.getId()验证
Thread.currentThread.getId()将当前运行线程id打印出来
ThreadPoolSize表示最大核心线程数  ThreadPoolSize = 3 线程池里有3个进程
为什么顺序不同:多线程中执行顺序控制不了,执行有快有慢
多线程是否可以做性能测试:不是很推荐,建议使用工具
5-15程序返回的结果id与所设的innovationCount和ThreadPoolSize大小并无什么关系,只是id的循环等于ThreadPoolSize

5-16 多线程测试-xml文件实现
1.3个方法
2.xml文件
parallel=“methods” 多线程级别是方法级别
thread-count：最大并发线程数2
<!--
methods级别：所有用例都可以在不同的线程下去执行
thread—count：代表了最大并发线程数
xml文件配置这种方式不能指定线程池，只有方法上才可以指定线程池
但是thread-count不就是ThreadPoolSize吗?不都表示最大核心线程数吗?

tests级别：不同的test tag下的用例可以在不同的线程下执行
          相同的test tag下的用例只能在同一个线程下执行

classs级别:不同的classs tag下的用例可以在不同的线程下执行
           相同的classs tag下的用例只能在同一个线程下执行
-->

5-17 testNG超时测试
timeOut
超时测试属性@Test(timeOut = 3000) //单位毫秒  要求在3s之内,3s还没有给出响应则报错
等一段时间还没来就不等了,就可以使用超时测试

由此可见，testng运行时，顺序是这样的：
@BeforeSuite->@BeforeTest->@BeforeClass->{@BeforeMethod->@Test->@AfterMethod}->@AfterClass->@AfterTest->@AfterSuite

