应用哪些技术
httpclient：模拟客户端发起请求
mock：模拟服务端返回结果数据
mybatis：方便操作MySQL数据库
TestNG：集成测试框架
SpringBoot：开发框架
Git：代码版本管理工具

实战开发主要内容：
展示层：测试报告
逻辑控制层：如何用代码执行测试用例
持久层：如何用mybatis和MySQL管理测试用例
Jenkins：持续集成工具
mock：开发在开发代码时，测试可以写测试代码，也可以提供mock数据给前端研发使用，提高测试价值
SpringBoot：实际开发接口

接口测试性能测试（侠义）
负载测试：通过逐步加压的方式，达到系统既定的阈值，比如CPU达到80%
压力测试和强度测试：通过逐步加压的方式，发现系统的饱和点，简单来说，就是看系统什么时候被压崩溃
并发测试：单位时间，多个线程同时访问一个模块，通常采用设置集合点的方式
稳定性测试和可靠性测试：80%CPU跑7*24小时，看系统的反应能力

SVN与Git的最主要的区别？
SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。

Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。

github账户名
humingyue0920/hu09200815/1325445822@qq.com


1.如何配置ssh
为什么要配置ssh
因为不配置的话,每次pull,push,commit都需要输入密码,设置后则可直接进行操作
1.首先输入命令 cd ~/.ssh命令查看是否已经存在公钥私钥
2.若不存在,则执行命令ssh--Keygen -t rsa -C "1325445822@qq.com"
3.则会在.ssh文件夹下生成公钥私钥文件,将后缀名为pub的内容复制到个人的github,settings->SSH and GPG keys中即可
4.在Git bash中输入ssh -T git@github.com-->yes(注:一定要输入yes,不能一直默认下去)

2.一台电脑连接多个github时该如何操作
为什么一台电脑需要连接多个github
因为你可能需要连接公司的github进行项目开发,你自己也有个人的github账户,上传代码和拉代码的时候配置不同的key,可以上传至不同的Git库
配置私人库的步骤基本如上,配置连接公司库如下
1.执行命令ssh--keygen -t rsa -C "yourcompany@qq.com" -f ~/.ssh/company_rsa
2.则会在.ssh/company_rsa文件夹下生成公钥私钥文件,将后缀名为pub的内容复制到公司的github,settings->SSH and GPG keys中即可
3.在.ssh文件夹下创建文件,vim config或touch config,输入以下命令
#personal github 配置个人私钥公钥
Host github.com
HostName github.com
User humingyue0920
IdentityFile /c/Users/jhs/.ssh/id_rsa

#company github 配置公司私钥公钥
Host github.com
HostName github.com
user companygithubuser
IdentityFile /c/Users/jhs/.ssh/company_rsa/id_rsa
4.在Git bash中输入ssh -T git@github.com-->yes(注:一定要输入yes,不能一直默认下去)
注:当只连接一个github时,无需config

3.多台计算机连接一个github时该如何操作
每台都配置ssh

4.Git的gui模式该如何使用
需要下载tortoise git插件

























在研发阶段,测试可以提供mock数据,提高测试价值
bug修复属于研发耗时,测试报告中可以提现,提测时间,一轮测试时间以及后面测试具体耗时,发现的bug数量,修复所在百分比,未修复所占百分比

监控:监控端口是否活着
加入端口假死,起一个定时任务